// <auto-generated />
using System;
using MedicalAppointment.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalAppointment.Common.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180803115643_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("MedicalAppointment.Common.Entities.BaseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("BaseEntity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseEntity");
                });

            modelBuilder.Entity("MedicalAppointment.Common.Entities.Appointment", b =>
                {
                    b.HasBaseType("MedicalAppointment.Common.Entities.BaseEntity");

                    b.Property<DateTime>("AppointmentEnd");

                    b.Property<DateTime>("AppointmentStart");

                    b.Property<int>("PatientId");

                    b.Property<int>("State");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointment");

                    b.HasDiscriminator().HasValue("Appointment");
                });

            modelBuilder.Entity("MedicalAppointment.Common.Entities.Patient", b =>
                {
                    b.HasBaseType("MedicalAppointment.Common.Entities.BaseEntity");

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("City");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("HealthInsurance")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("LastName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("ZipCode");

                    b.ToTable("Patient");

                    b.HasDiscriminator().HasValue("Patient");
                });

            modelBuilder.Entity("MedicalAppointment.Common.Entities.Appointment", b =>
                {
                    b.HasOne("MedicalAppointment.Common.Entities.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
