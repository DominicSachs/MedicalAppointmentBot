// <auto-generated />
using System;
using MedicalAppointment.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalAppointment.Common.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("MedicalAppointment.Common.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AppointmentEnd");

                    b.Property<DateTime>("AppointmentStart");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Information");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("PatientId");

                    b.Property<int>("Reason");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("MedicalAppointment.Common.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("City");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("HealthInsurance")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("LastName");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("MedicalAppointment.Common.Entities.Appointment", b =>
                {
                    b.HasOne("MedicalAppointment.Common.Entities.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
